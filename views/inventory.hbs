<html>
    <head>
        <title>Inventory</title>
        <link rel="stylesheet" type="text/css" href="../stylesheets/base.css">
        <link rel="stylesheet" type="text/css" href="../stylesheets/inventory.css">
        <link rel="icon" type="image/x-icon" href="/images/favicon.png">
    </head>
    <body>
        {{!-- Header --}}
        <div class="header-div">
            <img class="logo" src="../images/logo.png">
            <div class="flex center">
                <ul>
                    <li><a class="header-divider"></a></li>
                    <li><a class="header-button" href="/home">Home</a></li>
                    <li><a class="header-divider">></a></li>
                    <li><a class="header-button on-page">Inventory</a></li>
                </ul>
            </div>
            <div class="sign-out">
                <div>
                    <span>{{user.name}}</span> <br />
                    <a class="sign-out-button" href="/">Sign Out</a>
                </div>
            </div>
        </div>
        <div class="body-div" edit-status-data="{{editStatus}}" add-status-data="{{addStatus}}" is-admin-data="{{user.isAdmin}}">
            <div class="flex column container">
                <div class="flex nav">
                    <span class="title-card">Inventory</span>
                    <div class="input-container">
                        Sort By
                        <select id="sort">
                            <option></option>
                            <option>Item Name</option>
                            <option>Quantity</option>
                            <option>Price</option>
                            <option>Cost</option>
                            <option>Markup</option>
                            <option>Markup Percent</option>
                        </select> 
                    </div>
                    <div class="input-container">
                        Order
                        <select id="order">
                            <option></option>
                            <option>Descending</option>
                            <option>Ascending</option>
                        </select> 
                    </div>
                    <div class="input-container">
                        <input id="search" name="search" type="text" placeholder="Search">
                    </div>
                    {{#if user.isAdmin 1}}
                    <div id="add-item" class="input-container add-item">
                        Add Item
                    </div>
                    {{/if}}
                </div>
                <div class="table-container">
                    <table class="inventory-table">
                        <thead>
                            <tr>
                                <th>Item ID</th>
                                <th class="item-name">Item Name</th>
                                <th>Perishable</th>
                                <th class="number">Quantity</th>
                                <th class="number">Price</th>
                                <th class="number">Cost</th>
                                <th class="number">Markup</th>
                                <th class="number">Markup Percent</th>
                            </tr>
                        </thead>
                        <tbody>
                            {{#each inventory}}
                            <tr tabindex="0">
                                <td>{{itemId}}</td>
                                <td class="item-name">{{itemName}}</td>
                                 <td>{{#if isPerishable 1}}Yes{{/if}}{{#if isPerishable 0}}No{{/if}}</td>
                                <td class="number">{{quantity}}</td>
                                <td class="number">{{price}}</td>
                                <td class="number">{{cost}}</td>
                                <td class="number">{{markup}}</td>
                                <td class="number">{{markupPercent}}%</td>
                            </tr>
                            {{/each}}
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <div id="edit-input" class="flex column overlay-input">
            <form action="/edit-item" class="flex column" method="post">
                <span class="edit-title">Edit Item:</span>
                <span id="edit-item" class="edit-item"></span>
                <input id="itemId" name="itemId" type="hidden" value="">
 
                <span class="price">Price: </span>
                <input id="price-input" class="edit-input" type="text" name="price" value="" required>
            
                <span class="cost">Cost: </span>
                <input id="cost-input" class="edit-input" type="text" name="cost" value="" required>

                <div class="center">
                    <button class="cancel-button" type="button">Cancel</button>
                    <button class="save-button" type="submit">Save</button>
                </div>
            </form>
        </div>

        <div id="add-input" class="flex column add-overlay-input">
            <form action="/add-item" class="flex column" method="post">
                <span class="add-title">Add Item:</span>

                <span class="id">Item ID: </span>
                <input id="add-itemId" class="edit-input" name="itemId" type="text" required>

                <span class="name">Item name: </span>
                <input id="add-itemName" class="edit-input" name="itemName" type="text" required>
 
                <span class="price">Price: </span>
                <input id="add-price-input" class="edit-input" type="text" name="price" value="" required>
            
                <span class="cost">Cost: </span>
                <input id="add-cost-input" class="edit-input" type="text" name="cost" value="" required>

                <span class="cost">Perishable: </span>
                <div>
                    <div class="checkbox-wrapper-2">
                        <input id="add-perishable" type="checkbox" name="perishable" class="sc-gJwTLC ikxBAC" />
                    </div>
                </div>

                <div class="center">
                    <button class="add-cancel-button" type="button">Cancel</button>
                    <button class="add-save-button" onclick="return validateFields()" type="submit">Add</button>
                </div>
            </form>
        </div>
        <span class="error-message" id="error-message" hidden></span>
    </body>
<script>
    function validateFields() {
        const newItemId = document.getElementById('add-itemId').value.trim();
        const rows = document.querySelectorAll('tbody tr');
        const error = document.getElementById("error-message");

        for (const row of rows) {
            const existingItemId = row.cells[0].textContent.trim(); 
            if (existingItemId === newItemId) {
                error.textContent = "Item ID already exists";
                error.style.backgroundColor = "tomato";
                error.hidden = false;
                error.style.opacity = 1;
                setTimeout(() => {
                    error.style.opacity = 0;
                }, 3000);
                return false;
            }
        }
        
        return true;
    }

    document.addEventListener("DOMContentLoaded", () => {
        var onOther;
        const error = document.getElementById("error-message");
        const sortDropdown = document.getElementById("sort");
        const orderDropdown = document.getElementById("order");
        const searchInput = document.getElementById("search");
        const tableBody = document.querySelector(".inventory-table tbody");
        const bodyDiv = document.querySelector(".body-div");
        const edit = bodyDiv.getAttribute('edit-status-data');
        const add = bodyDiv.getAttribute('add-status-data');
        const admin = bodyDiv.getAttribute('is-admin-data');
        const columnMap = {
            "Item Name": 1,
            "Quantity": 2,
            "Price": 3,
            "Cost": 4,
            "Markup": 5,
            "Markup Percent": 6,
        };

        if (edit === "true") {
            error.textContent = "Edit successfully";
            error.style.backgroundColor = "limegreen";
            error.hidden = false;
            error.style.opacity = 1;
            setTimeout(() => {
                error.style.opacity = 0;
            }, 3000);
        } else if (edit === "false") {
            error.textContent = "Edit failed";
            error.style.backgroundColor = "tomato";
            error.hidden = false;
            error.style.opacity = 1;
            setTimeout(() => {
                error.style.opacity = 0;
            }, 3000);
        }

        if (add === "true") {
            error.textContent = "Item added successfully";
            error.style.backgroundColor = "limegreen";
            error.hidden = false;
            error.style.opacity = 1;
            setTimeout(() => {
                error.style.opacity = 0;
            }, 3000);
        } else if (add === "false") {
            error.textContent = "Add failed";
            error.style.backgroundColor = "tomato";
            error.hidden = false;
            error.style.opacity = 1;
            setTimeout(() => {
                error.style.opacity = 0;
            }, 3000);
        }

        function disableDropdowns(disabled) {
            sortDropdown.disabled = disabled;
            orderDropdown.disabled = disabled;
        }

        function parseValue(value, isNumber) {
            if (isNumber) {
                return parseFloat(value.replace(/,/g, '').replace('%', '')) || 0;
            }
            return value.toLowerCase(); 
        }

        function sortTable(columnIndex, isNumber, isAscending) {
            const rows = Array.from(tableBody.rows);

            rows.sort((rowA, rowB) => {
                const cellA = rowA.cells[columnIndex].textContent.trim();
                const cellB = rowB.cells[columnIndex].textContent.trim();

                const valueA = parseValue(cellA, isNumber);
                const valueB = parseValue(cellB, isNumber);

                if (valueA < valueB) return isAscending ? -1 : 1;
                if (valueA > valueB) return isAscending ? 1 : -1;
                return 0;
            });

            rows.forEach(row => tableBody.appendChild(row));
            disableDropdowns(false); 
        }

        function handleSort() {
            const selectedColumn = sortDropdown.value;
            const columnIndex = columnMap[selectedColumn];
            const isNumber = ["Quantity", "Price", "Cost", "Markup", "Markup Percent"].includes(selectedColumn);
            const isAscending = orderDropdown.value === "Ascending";

            if (columnIndex !== undefined) {
                disableDropdowns(true); 
                setTimeout(() => sortTable(columnIndex, isNumber, isAscending), 0); 
            }
        }

        function handleSearch() {
            const searchTerm = searchInput.value.toLowerCase();
            const rows = Array.from(tableBody.rows);

            rows.forEach(row => {
                const rowText = row.textContent.toLowerCase();
                row.style.display = rowText.includes(searchTerm) ? "" : "none";
            });
        }

        sortDropdown.addEventListener("change", handleSort);
        orderDropdown.addEventListener("change", handleSort);
        searchInput.addEventListener("input", handleSearch);

        const editInput = document.getElementById("edit-input");
        editInput.style.visibility = "hidden";
        const cancelButton = document.querySelector(".cancel-button");
        const saveButton = document.querySelector(".save-button");
        const editItemSpan = document.getElementById("edit-item");
        const priceInput = document.getElementById("price-input");
        const costInput = document.getElementById("cost-input");
        const itemIdInput = document.getElementById("itemId");

        tableBody.addEventListener("keydown", (event) => {
            if (event.key === "e" && !onOther && admin === "1") {
                const focusedRow = document.activeElement; 
                if (focusedRow.tagName === "TR") {
                    const cells = focusedRow.cells;

                    const itemId = cells[0].textContent.trim();
                    const itemName = cells[1].textContent.trim();
                    const price = cells[3].textContent.trim();
                    const cost = cells[4].textContent.trim();

                    itemIdInput.value = itemId;
                    editItemSpan.textContent = itemName;
                    priceInput.value = price;
                    costInput.value = cost;

                    onOther = true;

                    editInput.style.visibility = "visible";
                    bodyDiv.classList.add("blur");
                }
            }
        });

        cancelButton.addEventListener("click", () => {
            onOther = false;
            editInput.style.visibility = "hidden";
            bodyDiv.classList.remove("blur");
        });

        saveButton.addEventListener("click", (event) => {
            editInput.style.visibility = "hidden";
            bodyDiv.classList.remove("blur");
            onOther = false;
        });

        const addButton = document.getElementById("add-item");
        const addCancelButton = document.querySelector(".add-cancel-button");
        const addSaveButton = document.querySelector(".add-save-button");
        const addInput = document.getElementById("add-input");
        addInput.style.visibility = "hidden";

        const addPriceInput = document.getElementById("add-price-input");
        const addCostInput = document.getElementById("add-cost-input");
        const addItemId = document.getElementById("add-itemId");
        const addItemName = document.getElementById("add-itemName");

        addButton.addEventListener("click", () => {
            if (!onOther) {
                addInput.style.visibility = "visible";
                bodyDiv.classList.add("blur");
                addItemId.focus();
                onOther = true;
            }
        });

        addCancelButton.addEventListener("click", () => {
            addPriceInput.value = "";
            addCostInput.value = "";
            addItemId.value = "";
            addItemName.value = "";
            onOther = false;
            addInput.style.visibility = "hidden";
            bodyDiv.classList.remove("blur");
        });

        addSaveButton.addEventListener("click", (event) => {
            addInput.style.visibility = "hidden";
            bodyDiv.classList.remove("blur");
            onOther = false;
        });

        function validateInput(event) {
            const input = event.target;
            let value = input.value;

            const validPattern = /^(0|[1-9]\d*)(\.\d{0,2})?$/;

            if (!validPattern.test(value)) {
                input.value = value.slice(0, -1);
            }
        }

        function validateIdInput(event) {
            const input = event.target;
            let value = input.value;

            const validPattern = /^[a-zA-Z0-9]*$/;

            if (!validPattern.test(value)) {
                input.value = value.replace(/[^a-zA-Z0-9]/g, '');
                return;
            }

            input.value = value.toUpperCase();
        }

        addItemId.addEventListener("input", validateIdInput);
        addPriceInput.addEventListener("input", validateInput);
        addCostInput.addEventListener("input", validateInput);
        priceInput.addEventListener("input", validateInput);
        costInput.addEventListener("input", validateInput);
    });
</script>

</html>